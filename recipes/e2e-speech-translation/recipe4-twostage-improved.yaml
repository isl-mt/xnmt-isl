# Improved two-stage model.
#
# A two-stage end-to-end model with improvements that address error propagation issues.
# Yields strongest results both when lots of end-to-end data is available and works well when trained on less end-to-end data.
# Around >30k end-to-end sentences are needed for good results.
#
# This is pretrained using recipe 3, need to pass the proper path to the pretrained model below.

recipe4-twostage-improved: !Experiment
  exp_global: !ExpGlobal
    dropout: 0.3
    default_layer_dim: 512
    save_num_checkpoints: 3
    placeholders:
      PRETRAINED_MOD: <paste path of model from recipe 3 here>

      # Holds the Fisher Spanish-to-English data:
      DATA: /project/iwslt2015b/project/nmt-audio/data/es
      DATA_EN: /project/iwslt2015b/project/nmt-audio/data/es-en
      VOCAB: /project/iwslt2015b/project/nmt-audio/data/vocab

      # At each epoch, only a half of the data is loaded into memory so as to keep RAM requirements down.
      SAMPLE_TRAIN_SENTS_: &SAMPLE_TRAIN_SENTS 69360
      DEV_EVERY_: &DEV_EVERY 69360
      MAX_NUM_TRAIN_SENTS_: &MAX_NUM_TRAIN_SENTS ~

      # Early stopping will cause training to finish much earlier than this.
      RUN_FOR_EPOCHS_: &RUN_FOR_EPOCHS 500

  train: !SameBatchMultiTaskTrainingRegimen
    trainer: !AdamTrainer
      alpha: 0.0001
      skip_noisy: True
    dev_zero: True
    tasks:

    - !SimpleTrainingTask # Speech translation task, using the full two-stage model.
      kwargs: &task1
        name: '{EXP}.st'
        run_for_epochs: *RUN_FOR_EPOCHS
        max_num_train_sents: *MAX_NUM_TRAIN_SENTS
        lr_decay: 0.5
        lr_decay_times: 1
        patience: 5
        initial_patience: 10
        dev_every: *DEV_EVERY
        restart_trainer: True
        loss_calculator: !FeedbackLoss {}
        batcher: !WordSrcBatcher
          avg_batch_size: 24
          pad_src_to_multiple: 4
        max_src_len: 1500
        max_trg_len: 350
        src_file: ['{DATA_EN}/fisher_cmvn_fbank40_train.h5', '{DATA}/fisher_train.es_filt.proc.noid']
        trg_file: '{DATA_EN}/fisher_train.en_filt.proc.noid'
        model: !LoadSerialized
          filename: '{PRETRAINED_MOD}'
          path: train.tasks.0.model
          overwrite:
          - path: encoder.mode
            val: ~
          - path: encoder.mode_transduce
            val: split
          - path: encoder.mode_translate
            val: teacher
          - path: encoder.dropout_dec_state
            val: 0.5
          - path: encoder.split_context_transform
            val: !MLP {}
          - path: encoder.split_dual
            val: [0.0, 0.5]
          - path: encoder.split_regularizer
            val: 1.0
          - path: encoder.transducer_loss
            val: False
        dev_tasks:
          - !AccuracyEvalTask
            eval_metrics: bleu
            src_file: ['{DATA_EN}/fisher_cmvn_fbank40_dev.h5', '{DATA}/fisher_dev.es_filt.proc.noid']
            ref_file: '{DATA_EN}/fisher_dev.en.0_filt.proc.noid.words'
            hyp_file: '{EXP_DIR}/hyp/{EXP}.dev_slt_hyp'
            model: !Ref { path: train.tasks.0.model }
            inference: !AutoRegressiveInference
              batcher: !InOrderBatcher
                _xnmt_id: inference_batcher_audio
                pad_src_to_multiple: 4
              post_process: join-char
              max_src_len: 1500
              max_num_sents: 1000
              search_strategy: !BeamSearch
                max_len: 350
                beam_size: 15
                len_norm: !PolynomialNormalization
                  apply_during_search: true
                  m: 1.5
          - !LossEvalTask
            max_src_len: 1500
            src_file: ['{DATA_EN}/fisher_cmvn_fbank40_dev.h5', '{DATA}/fisher_dev.es_filt.proc.noid']
            ref_file: '{DATA_EN}/fisher_dev.en.0_filt.proc.noid'
            model: !Ref { path: train.tasks.0.model }
            batcher: !Ref { name: inference_batcher_audio }
            max_num_sents: 1000

    - !SimpleTrainingTask # ASR auxiliary task, uses the first stage of the 2-stage model.
      kwargs:
        << : *task1
        name: '{EXP}.asr'
        max_src_len: 1500
        max_trg_len: 350
        src_file: '{DATA_EN}/fisher_cmvn_fbank40_train.h5'
        trg_file: '{DATA}/fisher_train.es_filt.proc.noid'
        max_num_train_sents: *MAX_NUM_TRAIN_SENTS
        sample_train_sents: *SAMPLE_TRAIN_SENTS
        model: !Ref { path: train.tasks.0.model.encoder }
        dev_tasks:
          - !AccuracyEvalTask
            eval_metrics: wer,cer
            src_file: '{DATA_EN}/fisher_cmvn_fbank40_dev.h5'
            ref_file: '{DATA}/fisher_dev.es_filt.proc.noid.words'
            hyp_file: '{EXP_DIR}/hyp/{EXP}.dev_asr_hyp'
            model: !Ref { path: train.tasks.0.model.encoder }
            inference: !IndependentOutputInference
              batcher: !Ref { name: inference_batcher_audio }
              post_process: join-char
              max_src_len: 1500
              max_num_sents: 1000
          - !LossEvalTask
            max_src_len: 1500
            src_file: '{DATA_EN}/fisher_cmvn_fbank40_dev.h5'
            ref_file: '{DATA}/fisher_dev.es_filt.proc.noid'
            model: !Ref { path: train.tasks.0.model.encoder }
            batcher: !Ref { name: inference_batcher_audio }
            max_num_sents: 1000

    - !SimpleTrainingTask # Auxiliary MT task, uses the second stage of the 2-stage model.
      kwargs:
        << : *task1
        name: '{EXP}.mt'
        max_src_len: 350
        max_trg_len: 350
        src_file: '{DATA}/fisher_train.es_filt.proc.noid'
        trg_file: '{DATA_EN}/fisher_train.en_filt.proc.noid'
        max_num_train_sents: *MAX_NUM_TRAIN_SENTS
        sample_train_sents: *SAMPLE_TRAIN_SENTS
        batcher: !WordSrcBatcher
          avg_batch_size: 40
        model: !DefaultTranslator
          src_embedder: !Ref { path: train.tasks.0.model.encoder.trg_embedder }
          encoder: !Ref { path: train.tasks.0.model.encoder.dec_lstm }
          attender: !Ref { path: train.tasks.0.model.attender }
          decoder: !Ref { path: train.tasks.0.model.decoder }
          trg_embedder: !Ref { path: train.tasks.0.model.trg_embedder }
          src_reader: !PlainTextReader
            vocab: !Vocab
              _xnmt_id: char_vocab
              vocab_file: '{VOCAB}/en-de-es-fr.lc.no-numbers-punct.vocab'
          trg_reader: !PlainTextReader
            vocab: !Ref { name: char_vocab }
        dev_tasks:
          - !AccuracyEvalTask
            eval_metrics: bleu
            src_file: '{DATA}/fisher_dev.es_filt.proc.noid'
            ref_file: '{DATA_EN}/fisher_dev.en.0_filt.proc.noid.words'
            hyp_file: '{EXP_DIR}/hyp/{EXP}.dev_mt_hyp'
            model: !Ref { path: train.tasks.2.model }
            inference: !AutoRegressiveInference
              batcher: !InOrderBatcher
                _xnmt_id: inference_batcher_text
              post_process: join-char
              max_src_len: 1500
              max_num_sents: 1000
              # no beam search for auxiliary tasks
              search_strategy: !BeamSearch
                max_len: 350
          - !LossEvalTask
            max_src_len: 1500
            src_file: '{DATA}/fisher_dev.es_filt.proc.noid'
            ref_file: '{DATA_EN}/fisher_dev.en.0_filt.proc.noid'
            model: !Ref { path: train.tasks.2.model }
            batcher: !Ref { name: inference_batcher_text }
            max_num_sents: 1000
            
  evaluate:
    - !AccuracyEvalTask
      eval_metrics: bleu
      src_file: ['{DATA_EN}/fisher_cmvn_fbank40_test.h5', '{DATA}/fisher_test.es_filt.proc.noid']
      ref_file: '{DATA_EN}/fisher_test.en.0_filt.proc.noid.words'
      hyp_file: '{EXP_DIR}/hyp/{EXP}.eval_slt_hyp'
      model: !Ref { path: train.tasks.0.model }
      inference: !AutoRegressiveInference
        batcher: !Ref { name: inference_batcher_audio }
        post_process: join-char
        max_src_len: 1500
        search_strategy: !BeamSearch
          beam_size: 15
          max_len: 350
          len_norm: !PolynomialNormalization
            apply_during_search: true
            m: 1.5
    - !LossEvalTask
      max_src_len: 1500
      src_file: ['{DATA_EN}/fisher_cmvn_fbank40_test.h5', '{DATA}/fisher_test.es_filt.proc.noid']
      ref_file: '{DATA_EN}/fisher_test.en.0_filt.proc.noid'
      model: !Ref { path: train.tasks.0.model }
      batcher: !Ref { name: inference_batcher_audio }
